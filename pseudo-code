Engs 20 

LA1 -- Check in 

              Pseudo Code 
	      
0. preprocessor derivative 

#include<stdio.h>

0. Function prototypes

int wordcount (void);
	
1. count the number of words in the file

int wordcount (void)

{
	int count = 0;
	char newl;
	FILE *ifile;
	
	ifile=fopen("wordbank.txt", "r");        /* open the file to read it */
	
	if (ifile == NULL) {                     /* check whether the file exists first */
    	printf("The file does not exist\n");
    	return (-1);
    }	
    
    /* the following reads the file and counts all the '\n' characters that is the number
     * of lines in the document plus 1 */
     
    else {	
   		while ((fscanf(ifile,"%c", &newl)) != EOF){ 
       		if (newl == '\n')
            count++;
   		}
   		
   printf("There are %d words in the file.\n", count+1);
   }
   
   fclose (ifile);  /* close the file */
   
   return (0);
}
	
2. display the number of words (e.g. 15)
	2.1. ask the user to choose which word (e.g. between 1-15)
		2.1.1. adjust for wrong input (e.g. 30) by asking the user to input the right number

3. Decryption of the words
	3.1. open the wordbank
	3.2. read a line 
	3.3. store the shift integer 
	3.4. read the following letters one after another
	3.5. store it as a character and
	3.5. transform each character by the shift integer
	3.6. stop at the end of the line
	3.7. close file

4. Locate the appropriate word (e.g. word #3)
	4.1. open the file
	4.2. read line after line 
	4.3. stop after the n times (n being the entered number)
	4.4. close file

6. Let the game begin 

	7. display the number of characters in the word
		7.1. That is, call function in (2)
		
	8. display the number of mistakes made and left
	
	9. display the dashes (- - -) whose number is equal to number of characters 
	   in the selected word
		
		
	10. ask the user to guess a letter 
		10.1. adjust for uppercase input 
		
	11. compare the entered letter with all the letters of the selected word
		
	12. if entered letter matches any of the letters in the word 
		12.1. replace the corresponding dash by the entered letter and
		12.2. go back to (7)
		
	13. else, 
		13.1. update the number of mistakes and
		13.2. Repeat steps 7 - 12 

15. End the game when either 
	15.1. the player makes 10 mistakes or
	15.2. successfully guesses the word
		
16. Ask the player if they would like to play a new game
	16.1. if yes, repeat 6-13
	16.2. else, close terminate the game session
		
